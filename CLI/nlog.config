<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\temp\internal-nlog.txt">

  <!-- Load the ASP.NET Core plugin -->
  <!--<extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>-->

  <!-- the targets to write to -->
  <targets>
    <!-- write logs to file -->
    <target xsi:type="File" name="allfile" fileName="c:\temp\nlog-all-${shortdate}.log"
                layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|${message} ${exception}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile" fileName="c:\temp\nlog-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />

    <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />

    <target name="database" xsi:type="Database">
      <connectionString>Server=localhost\sql2016;Database=DDD-Example-Log;Trusted_Connection=True;</connectionString>

      <!--
        Script for creating the dbo.Log table.

        SET ANSI_NULLS ON
        SET QUOTED_IDENTIFIER ON
        CREATE TABLE [dbo].[Log] (
	        [Id] [int] IDENTITY(1,1) NOT NULL,
	        [Application] [nvarchar](50) NOT NULL,
	        [Logged] [datetime] NOT NULL,
	        [Level] [nvarchar](50) NOT NULL,
	        [Message] [nvarchar](max) NOT NULL,
	        [UserName] [nvarchar](250) NULL,
	        [ServerName] [nvarchar](max) NULL,
	        [Port] [nvarchar](max) NULL,
	        [Url] [nvarchar](max) NULL,
	        [Https] [bit] NULL,
	        [ServerAddress] [nvarchar](100) NULL,
	        [RemoteAddress] [nvarchar](100) NULL,
	        [Logger] [nvarchar](250) NULL,
	        [Callsite] [nvarchar](max) NULL,
	        [Exception] [nvarchar](max) NULL,
          CONSTRAINT [PK_dbo.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
            WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
        ) ON [PRIMARY]
  -->

      <commandText>
        insert into dbo.Log (
        Application, Logged, Level, Message,
        Logger, CallSite, Exception
        ) values (
        @Application, @Logged, @Level, @Message,
        @Logger, @Callsite, @Exception
        );
      </commandText>

      <parameter name="@application" layout="CliNlog" />
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />

      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite:filename=true}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />
    <logger name="*" minlevel="Trace" writeTo="database" />

    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
  </rules>
</nlog>